"""
Main FastAPI application entry point.
"""

from fastapi import FastAPI
from pydantic import BaseModel

# Import only the function needed (cleaner & avoids circular imports)
from app.service.ask_pipeline import ask_once


# Initialize FastAPI app
app = FastAPI()


class AskIn(BaseModel):
    """
    Request body model for the /ask endpoint.
    """
    question: str  # User's natural language question


@app.post("/ask")
def ask(in_: AskIn) -> dict:
    """
    Handle user question and return generated answer.

    Args:
        in_ (AskIn): User input containing a question.

    Returns:
        dict: Response generated by ask_pipeline.
    """
    # Process the question using the pipeline
    return ask_once(in_.question)
